diff --git a/grimoire_elk/enriched/enrich.py b/grimoire_elk/enriched/enrich.py
index 6182c2b..f4ac611 100644
--- a/grimoire_elk/enriched/enrich.py
+++ b/grimoire_elk/enriched/enrich.py
@@ -672,16 +672,12 @@ class Enrich(ElasticItems):
         if item_date and item_date.tzinfo:
             item_date = (item_date - item_date.utcoffset()).replace(tzinfo=None)
 
-        enrollments = self.get_enrollments(uuid)
+        enrollments = self.get_enrollments_complex(uuid, item_date, True)
         enroll = self.unaffiliated_group
         if enrollments:
             for enrollment in enrollments:
-                if not item_date:
-                    enroll = enrollment.organization.name
-                    break
-                elif item_date >= enrollment.start and item_date <= enrollment.end:
-                    enroll = enrollment.organization.name
-                    break
+                enroll = enrollment
+                break
         return enroll
 
     def get_multi_enrollment(self, uuid, item_date):
@@ -693,14 +689,11 @@ class Enrich(ElasticItems):
         if item_date and item_date.tzinfo:
             item_date = (item_date - item_date.utcoffset()).replace(tzinfo=None)
 
-        enrollments = self.get_enrollments(uuid)
+        enrollments = self.get_enrollments_complex(uuid, item_date, False)
 
         if enrollments:
             for enrollment in enrollments:
-                if not item_date:
-                    enrolls.append(enrollment.organization.name)
-                elif enrollment.start <= item_date <= enrollment.end:
-                    enrolls.append(enrollment.organization.name)
+                enrolls.append(enrollment)
         else:
             enrolls.append(self.unaffiliated_group)
 
@@ -924,6 +917,9 @@ class Enrich(ElasticItems):
     def get_enrollments(self, uuid):
         return api.enrollments(self.sh_db, uuid)
 
+    def get_enrollments_complex(self, uuid, item_date, single):
+        return api.enrollments_complex(self.sh_db, uuid, item_date, single)
+
     @lru_cache()
     def get_unique_identity(self, uuid):
         return api.unique_identities(self.sh_db, uuid)[0]
